geom_bar(stat = "identity") +
theme_minimal()
top_10_states_count |>
ggplot(mapping = aes(x=state, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
top_10_city_count |>
ggplot(mapping = aes(x=city, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
top_10_city_count |>
ggplot(mapping = aes(x=city, y=count, fill=city)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
top_10_city_count |>
ggplot(mapping = aes(x=City, y=count, fill=City)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
top_10_city_count |>
ggplot(mapping = aes(x=City, y=Count, fill=City)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
City_count<- aggregate(Superstore_data$City,by=list(Superstore_data$City), FUN=length)
top_10_city_count <-City_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
City=Group.1,
Count=x
)
top_10_city_count
mean_ratio <- mean(mpg$hwy / mpg$cty)
mpg |>
mutate(hwy_to_cty = hwy / cty) |>
ggplot() +
geom_histogram(mapping = aes(x = hwy_to_cty), color = 'white') +
geom_vline(xintercept = mean_ratio, color = 'orange') +
annotate("text",  # the type of annotation
x = 1.425, y = 24.5, label = "Average", color = 'orange') +
theme_classic()
# add a new column for these abnormally high highway mileages
mpg <- mutate(mpg, high_hwy = (hwy > 40 & displ < 2) |
(hwy > 20 & displ > 5))
# start a new ggplot for multiple data set bindings
ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(data = filter(mpg, !high_hwy), color = 'darkblue') +
geom_point(data = filter(mpg, high_hwy), color = 'darkred') +
geom_text_repel(data = filter(mpg, high_hwy),
mapping = aes(label = model)) +
theme_classic() +
scale_color_brewer(palette = "Set1")
knitr::opts_chunk$set(echo = TRUE)
# Load tidyverse
library(tidyverse)
library(dplyr)
Superstore_data=read.csv("SampleSuperstore_final.csv")
head(Superstore_data)
colnames(Superstore_data)
nrow(Superstore_data)
for (x in unique(Superstore_data$Ship.Mode)) {
print(x)
}
n_distinct(Superstore_data$Ship.Mode)
for (x in unique(Superstore_data$Segment)) {
print(x)
}
sprintf("Count of the unique Segments: %s", n_distinct(Superstore_data$Segment))
for (x in unique(Superstore_data$Country)) {
print(x)
}
sprintf("Count of the unique Countries: %s", n_distinct(Superstore_data$Country))
for (x in unique(Superstore_data$City)) {
print(x)
}
sprintf("Count of the unique cities: %s", n_distinct(Superstore_data$City))
for (x in unique(Superstore_data$State)) {
print(x)
}
sprintf("Count of the unique States: %s", n_distinct(Superstore_data$State))
for (x in unique(Superstore_data$Region)) {
print(x)
}
sprintf("Count of the unique Regions: %s", n_distinct(Superstore_data$Region))
for (x in unique(Superstore_data$Category)) {
print(x)
}
sprintf("Count of the unique Categories: %s", n_distinct(Superstore_data$Category))
sprintf("Unique values for the column - Sub-Category :");
for (x in unique(Superstore_data$Sub.Category)) {
print(x)
}
sprintf("Count of the Sub-Category: %s", n_distinct(Superstore_data$Sub.Category))
for (x in unique(Superstore_data$Postal.Code)) {
print(x)
}
cat("\n")
sprintf("Count of the Postal-Code: %s",n_distinct(Superstore_data$Postal.Code))
summary(Superstore_data$Sales)
summary(Superstore_data$Quantity)
summary(Superstore_data$Discount)
summary(Superstore_data$Profit)
summary(Superstore_data)
sapply(Superstore_data,function(x) n_distinct(x))
Superstore_data |>
ggplot(mapping = aes(x=Ship.Mode, color = Ship.Mode, fill=Ship.Mode)) +
geom_bar()
Superstore_data |>
ggplot(mapping = aes(x=Segment, color = Segment, fill=Segment)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Region, color = Region, fill=Region)) +
geom_bar() +
theme_minimal()
state_count<- aggregate(Superstore_data$State,by=list(Superstore_data$State), FUN=length)
top_10_states_count <-state_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
state=Group.1,
count=x
)
top_10_states_count
top_10_states_count |>
ggplot(mapping = aes(x=state, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
City_count<- aggregate(Superstore_data$City,by=list(Superstore_data$City), FUN=length)
top_10_city_count <-City_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
City=Group.1,
Count=x
)
top_10_city_count
top_10_city_count |>
ggplot(mapping = aes(x=City, y=Count, fill=City)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
Superstore_data |>
ggplot(mapping = aes(x=Category, color = Category, fill=Category)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Sub.Category, fill=Sub.Category)) +
geom_bar() +
theme_minimal() +
theme (axis.text.x =  element_text(angle=90))
Superstore_data %>%
ggplot() +
geom_histogram(mapping = aes(x = Quantity), fill = 'blue', binwidth=1)
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, fill = Category), position="dodge")
Superstore_data %>%
ggplot() +
geom_smooth(mapping = aes(x = Quantity, y = Sales))+
theme_minimal()
aggregate(Superstore_data$Sales, list(Superstore_data$Sub.Category), FUN=mean) |>
rename (
Sub_Category=Group.1,
Mean_Sales=x
) |>
arrange(desc(Mean_Sales))
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Sales,fill = Category),stat = "identity", position="dodge")
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Profit,fill = Category),stat = "identity", position="dodge")
#for (x in unique(Superstore_data$City)) {
#  print(x)
#}
unique(Superstore_data$City)
unique(Superstore_data$Postal.Code)
knitr::opts_chunk$set(echo = TRUE)
# Load tidyverse
library(tidyverse)
library(dplyr)
Superstore_data=read.csv("SampleSuperstore_final.csv")
head(Superstore_data)
colnames(Superstore_data)
nrow(Superstore_data)
for (x in unique(Superstore_data$Ship.Mode)) {
print(x)
}
n_distinct(Superstore_data$Ship.Mode)
for (x in unique(Superstore_data$Segment)) {
print(x)
}
sprintf("Count of the unique Segments: %s", n_distinct(Superstore_data$Segment))
for (x in unique(Superstore_data$Country)) {
print(x)
}
sprintf("Count of the unique Countries: %s", n_distinct(Superstore_data$Country))
unique(Superstore_data$City)
sprintf("Count of the unique cities: %s", n_distinct(Superstore_data$City))
unique(Superstore_data$State)
sprintf("Count of the unique States: %s", n_distinct(Superstore_data$State))
for (x in unique(Superstore_data$Region)) {
print(x)
}
sprintf("Count of the unique Regions: %s", n_distinct(Superstore_data$Region))
for (x in unique(Superstore_data$Category)) {
print(x)
}
sprintf("Count of the unique Categories: %s", n_distinct(Superstore_data$Category))
sprintf("Unique values for the column - Sub-Category :");
for (x in unique(Superstore_data$Sub.Category)) {
print(x)
}
sprintf("Count of the Sub-Category: %s", n_distinct(Superstore_data$Sub.Category))
unique(Superstore_data$Postal.Code)
sprintf("Count of the Postal-Code: %s",n_distinct(Superstore_data$Postal.Code))
summary(Superstore_data$Sales)
summary(Superstore_data$Quantity)
summary(Superstore_data$Discount)
summary(Superstore_data$Profit)
summary(Superstore_data)
sapply(Superstore_data,function(x) n_distinct(x))
Superstore_data |>
ggplot(mapping = aes(x=Ship.Mode, color = Ship.Mode, fill=Ship.Mode)) +
geom_bar()
Superstore_data |>
ggplot(mapping = aes(x=Segment, color = Segment, fill=Segment)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Region, color = Region, fill=Region)) +
geom_bar() +
theme_minimal()
state_count<- aggregate(Superstore_data$State,by=list(Superstore_data$State), FUN=length)
top_10_states_count <-state_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
state=Group.1,
count=x
)
top_10_states_count
top_10_states_count |>
ggplot(mapping = aes(x=state, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
City_count<- aggregate(Superstore_data$City,by=list(Superstore_data$City), FUN=length)
top_10_city_count <-City_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
City=Group.1,
Count=x
)
top_10_city_count
top_10_city_count |>
ggplot(mapping = aes(x=City, y=Count, fill=City)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
Superstore_data |>
ggplot(mapping = aes(x=Category, color = Category, fill=Category)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Sub.Category, fill=Sub.Category)) +
geom_bar() +
theme_minimal() +
theme (axis.text.x =  element_text(angle=90))
Superstore_data %>%
ggplot() +
geom_histogram(mapping = aes(x = Quantity), fill = 'blue', binwidth=1)
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, fill = Category), position="dodge")
Superstore_data %>%
ggplot() +
geom_smooth(mapping = aes(x = Quantity, y = Sales))+
theme_minimal()
aggregate(Superstore_data$Sales, list(Superstore_data$Sub.Category), FUN=mean) |>
rename (
Sub_Category=Group.1,
Mean_Sales=x
) |>
arrange(desc(Mean_Sales))
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Sales,fill = Category),stat = "identity", position="dodge")
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Profit,fill = Category),stat = "identity", position="dodge")
Superstore_data |>
ggplot(aes(x=Quantity ,y= Sales)) |>
geom_point()
Superstore_data |>
ggplot(aes(x=Quantity ,y= Sales)) |>
geom_point(color = "gray")
Superstore_data |>
ggplot() |>
geom_point(aes(x=Quantity ,y= Sales),color = "gray")
Superstore_data |>
ggplot() +
geom_point(aes(x=Quantity ,y= Sales),color = "gray")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_boxplot(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=category, fill=region ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,shape=category, fill=region ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Category, fill=region ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Profit, fill=region ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=discount ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_histogram(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity ),color = "green")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity , color = region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity , color = Region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Quantity , color = Region, shape=Region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Profit , color = Region, shape=Region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Discount , color = Region, shape=Region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Quantity ,y= Sales, color = Region, shape=Region) )
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Discount , color = Region, shape=Region) )
last_plot() +
coord_polar()
top_10_states_count |>
ggplot(mapping = aes(x=state, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
last_plot() +
coord_polar()
knitr::opts_chunk$set(echo = TRUE)
# Load tidyverse
library(tidyverse)
library(dplyr)
Superstore_data=read.csv("SampleSuperstore_final.csv")
head(Superstore_data)
colnames(Superstore_data)
nrow(Superstore_data)
for (x in unique(Superstore_data$Ship.Mode)) {
print(x)
}
n_distinct(Superstore_data$Ship.Mode)
for (x in unique(Superstore_data$Segment)) {
print(x)
}
sprintf("Count of the unique Segments: %s", n_distinct(Superstore_data$Segment))
for (x in unique(Superstore_data$Country)) {
print(x)
}
sprintf("Count of the unique Countries: %s", n_distinct(Superstore_data$Country))
unique(Superstore_data$City)
sprintf("Count of the unique cities: %s", n_distinct(Superstore_data$City))
unique(Superstore_data$State)
sprintf("Count of the unique States: %s", n_distinct(Superstore_data$State))
for (x in unique(Superstore_data$Region)) {
print(x)
}
sprintf("Count of the unique Regions: %s", n_distinct(Superstore_data$Region))
for (x in unique(Superstore_data$Category)) {
print(x)
}
sprintf("Count of the unique Categories: %s", n_distinct(Superstore_data$Category))
sprintf("Unique values for the column - Sub-Category :");
for (x in unique(Superstore_data$Sub.Category)) {
print(x)
}
sprintf("Count of the Sub-Category: %s", n_distinct(Superstore_data$Sub.Category))
unique(Superstore_data$Postal.Code)
sprintf("Count of the Postal-Code: %s",n_distinct(Superstore_data$Postal.Code))
summary(Superstore_data$Sales)
summary(Superstore_data$Quantity)
summary(Superstore_data$Discount)
summary(Superstore_data$Profit)
summary(Superstore_data)
sapply(Superstore_data,function(x) n_distinct(x))
Superstore_data |>
ggplot(mapping = aes(x=Ship.Mode, color = Ship.Mode, fill=Ship.Mode)) +
geom_bar()
Superstore_data |>
ggplot(mapping = aes(x=Segment, color = Segment, fill=Segment)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Region, color = Region, fill=Region)) +
geom_bar() +
theme_minimal()
state_count<- aggregate(Superstore_data$State,by=list(Superstore_data$State), FUN=length)
top_10_states_count <-state_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
state=Group.1,
count=x
)
top_10_states_count
top_10_states_count |>
ggplot(mapping = aes(x=state, y=count, fill=state)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
City_count<- aggregate(Superstore_data$City,by=list(Superstore_data$City), FUN=length)
top_10_city_count <-City_count %>%
arrange(desc(x)) %>%
slice(1:10) %>%
rename (
City=Group.1,
Count=x
)
top_10_city_count
top_10_city_count |>
ggplot(mapping = aes(x=City, y=Count, fill=City)) +
geom_bar(stat = "identity") +
theme_minimal()+
theme (axis.text.x =  element_text(angle=90))
Superstore_data |>
ggplot(mapping = aes(x=Category, color = Category, fill=Category)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot(mapping = aes(x=Sub.Category, fill=Sub.Category)) +
geom_bar() +
theme_minimal() +
theme (axis.text.x =  element_text(angle=90))
Superstore_data %>%
ggplot() +
geom_histogram(mapping = aes(x = Quantity), fill = 'blue', binwidth=1)
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, fill = Category), position="dodge")
Superstore_data %>%
ggplot() +
geom_smooth(mapping = aes(x = Quantity, y = Sales))+
theme_minimal()
aggregate(Superstore_data$Sales, list(Superstore_data$Sub.Category), FUN=mean) |>
rename (
Sub_Category=Group.1,
Mean_Sales=x
) |>
arrange(desc(Mean_Sales))
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Sales,fill = Category),stat = "identity", position="dodge")
Superstore_data %>%
ggplot() +
geom_bar(mapping = aes(x = Region, y=Profit,fill = Category),stat = "identity", position="dodge")
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Discount , color = Region, shape=Region) )
Superstore_data |>
ggplot(mapping = aes(x=Category, color = Category, fill=Category)) +
geom_bar() +
theme_minimal()
last_plot() +
coord_polar()
Superstore_data |>
ggplot(mapping = aes(x=Ship.Mode, color = Ship.Mode, fill=Ship.Mode)) +
geom_bar()
last_plot() +
coord_polar()
Superstore_data |>
ggplot(mapping = aes(x=Segment, color = Segment, fill=Segment)) +
geom_bar() +
theme_minimal()
Superstore_data |>
ggplot() +
geom_point(aes(x=Sales ,y=Profit , color = Region, shape=Region) )
